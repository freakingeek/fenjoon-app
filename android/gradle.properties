# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# Enables Gradle daemon which keeps gradle running in the background to speed up builds
org.gradle.daemon=true

# Enable gradle caching to speed up builds
org.gradle.caching=true

# Configures gradle to use the appropriate configuration on demand
org.gradle.configureondemand=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enable AAPT2 PNG crunching
android.enablePngCrunchInReleaseBuilds=true

# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=arm64-v8a

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=true

# Use this property to enable or disable the Hermes JS engine.
# If set to false, you will be using JSC instead.
hermesEnabled=true

# Enable GIF support in React Native images (~200 B increase)
expo.gif.enabled=false
# Enable webp support in React Native images (~85 KB increase)
expo.webp.enabled=true
# Enable animated webp support (~3.4 MB increase)
# Disabled by default because iOS doesn't support animated webp
expo.webp.animated=false

# Enable network inspector
EX_DEV_CLIENT_NETWORK_INSPECTOR=true

# Use legacy packaging to compress native libraries in the resulting APK.
expo.useLegacyPackaging=true

# Enable ProGuard for further code optimization and shrinking
android.enableProguardInReleaseBuilds=true
android.enableShrinkResourcesInReleaseBuilds=true
android.extraMavenRepos=[]

# Minimize resources by removing debug information from release builds
android.enableR8.fullMode=true

# Enable D8 desugaring for compatibility with Java 8 features
android.enableD8.desugaring=true

# Configure APK splitting to generate multiple APKs based on screen density
android.enableSplit=true

# Reduce app size by excluding unused resources from different languages
android.resourceConfigurations=en

# Optimize code generation
android.useAndroidX.enableJetifier=false

# Disable debug symbols in release builds
android.packageBuildConfig=false

# Enable additional code shrinking
android.enableAppCompileTimeRClass=true